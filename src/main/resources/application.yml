# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    profiles:
        active: dev

    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://postgresql:5432/jpabatch?reWriteBatchedInserts=true
        username: jpabatch
        password: P@ssw0rd
    hikari:
        minimumIdle: 2
        maximumPoolSize: 4
#        idleTimeout: 30000
        poolName: jpabatch
#        maxLifetime: 2000000
        connectionTimeout: 360000
    jpa:
#        database-platform: io.github.jhipster.org.fasih.batchjpa.domain.util.FixedPostgreSQL82Dialect
#        database: POSTGRESQL
        show-sql: true
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.jdbc.batch_size: 20
            hibernate.order_inserts: true
            hibernate.order_updates: true
            hibernate.jdbc.batch_versioned_data: true
        #            hibernate.cache.use_second_level_cache: true
#            hibernate.cache.use_query_cache: false
#            hibernate.generate_statistics: true
#            hibernate.cache.region.factory_class: io.github.jhipster.config.jcache.NoDefaultJCacheRegionFactory
        hibernate:
            ddl-auto: update




# ===================================================================
# To enable SSL, generate a certificate using:
# keytool -genkey -alias talarion -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 8443
#    ssl:
#        key-store: keystore.p12
#        key-store-password: <your-password>
#        keyStoreType: PKCS12
#        keyAlias: talarion
# ===================================================================
server:
    port: 8080


logging:
    level:
        org.hibernate.SQL: DEBUG
        org.hibernate.type.descriptor.sql: false
